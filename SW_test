<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Study-Wars | Knowledge Battle Arena</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@700&family=Russo+One&family=Share+Tech+Mono&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="styles.css">
<style>
/* Base Styles */
:root {
    --dark-bg: #0a0a12;
    --neon-purple: #9d00ff;
    --neon-orange: #ff5e00;
    --neon-pink: #ff00aa;
    --glass-light: rgba(255, 255, 255, 0.1);
    --glass-border: rgba(255, 255, 255, 0.2);
}

body {
    margin: 0;
    padding: 0;
    font-family: 'Share Tech Mono', monospace;
    background-color: var(--dark-bg);
    color: white;
    overflow-x: hidden;
}

/* Animated Gradient Background */
.gradient-bg {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, #1a0a2e 0%, #2e0a1a 50%, #1a2e0a 100%);
    background-size: 400% 400%;
    animation: gradientShift 15s ease infinite;
    z-index: -2;
}

@keyframes gradientShift {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
}

/* Fire Particles Background */
.fire-particles {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: url('fire-particles.gif') center/cover no-repeat;
    opacity: 0.15;
    z-index: -1;
}

/* Glass Morphism Styles */
.glass-nav, .glass-panel {
    background: var(--glass-light);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border: 1px solid var(--glass-border);
    box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
}

.glass-nav {
    border-radius: 0 0 20px 20px;
    border-top: none;
    border-left: none;
    border-right: none;
}

.glass-panel {
    border-radius: 20px;
    padding: 2rem;
}

/* Neon Typography */
.neon-text {
    color: var(--neon-purple);
    text-shadow: 0 0 5px var(--neon-purple), 0 0 10px var(--neon-purple);
}

.neon-text-alt {
    color: var(--neon-orange);
    text-shadow: 0 0 5px var(--neon-orange), 0 0 10px var(--neon-orange);
}

.neon-title {
    font-family: 'Russo One', sans-serif;
    font-size: 4rem;
    text-transform: uppercase;
    margin: 0;
    text-align: center;
}

.neon-title span {
    display: inline-block;
    color: var(--neon-orange);
    text-shadow: 0 0 10px var(--neon-orange), 0 0 20px var(--neon-orange);
    animation: pulse 2s infinite alternate;
}

@keyframes pulse {
    from { text-shadow: 0 0 10px var(--neon-orange), 0 0 20px var(--neon-orange); }
    to { text-shadow: 0 0 15px var(--neon-orange), 0 0 30px var(--neon-orange), 0 0 40px var(--neon-pink); }
}

.neon-subtitle {
    font-size: 1.5rem;
    text-align: center;
    margin: 1rem 0 2rem;
    color: #ccc;
    text-shadow: 0 0 5px rgba(255,255,255,0.3);
}

/* Navigation */
nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 2rem;
}

.logo {
    font-family: 'Orbitron', sans-serif;
    font-size: 2rem;
    letter-spacing: 2px;
}

nav ul {
    display: flex;
    gap: 2rem;
    list-style: none;
}

.neon-link {
    color: white;
    text-decoration: none;
    font-weight: bold;
    position: relative;
    padding: 0.5rem 0;
}

.neon-link::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 2px;
    background: var(--neon-purple);
    box-shadow: 0 0 5px var(--neon-purple);
    transition: width 0.3s ease;
}

.neon-link:hover::after {
    width: 100%;
}

/* Neon Buttons */
.neon-btn, .neon-btn-lg {
    display: inline-block;
    padding: 0.75rem 1.5rem;
    border-radius: 50px;
    text-decoration: none;
    font-weight: bold;
    text-transform: uppercase;
    letter-spacing: 1px;
    position: relative;
    overflow: hidden;
    transition: all 0.3s ease;
}

.neon-btn {
    border: 2px solid var(--neon-purple);
    color: var(--neon-purple);
    box-shadow: 0 0 10px var(--neon-purple), inset 0 0 5px var(--neon-purple);
}

.neon-btn:hover {
    background-color: var(--neon-purple);
    color: black;
    box-shadow: 0 0 20px var(--neon-purple), 0 0 30px var(--neon-purple);
    transform: translateY(-2px);
}

.neon-btn-lg {
    padding: 1rem 2.5rem;
    font-size: 1.25rem;
    border: 2px solid var(--neon-orange);
    color: var(--neon-orange);
    box-shadow: 0 0 15px var(--neon-orange), inset 0 0 8px var(--neon-orange);
}

.neon-btn-lg:hover {
    background-color: var(--neon-orange);
    color: black;
    box-shadow: 0 0 25px var(--neon-orange), 0 0 40px var(--neon-orange);
    transform: translateY(-3px);
}

.neon-btn-lg.alt {
    border-color: var(--neon-pink);
    color: var(--neon-pink);
    box-shadow: 0 0 15px var(--neon-pink), inset 0 0 8px var(--neon-pink);
}

.neon-btn-lg.alt:hover {
    background-color: var(--neon-pink);
    box-shadow: 0 0 25px var(--neon-pink), 0 0 40px var(--neon-pink);
}

.cta-buttons {
    display: flex;
    justify-content: center;
    gap: 2rem;
    margin-top: 2rem;
}

/* Stats Section */
.stats {
    display: flex;
    justify-content: space-around;
    margin: 3rem auto;
    max-width: 1000px;
}

.stat-item {
    text-align: center;
    padding: 1.5rem;
}

.stat-value {
    font-family: 'Orbitron', sans-serif;
    font-size: 3rem;
    margin-bottom: 0.5rem;
}

.stat-label {
    font-size: 1rem;
    letter-spacing: 1px;
    opacity: 0.8;
}

/* Responsive Adjustments */
@media (max-width: 768px) {
    nav {
        flex-direction: column;
        padding: 1rem;
    }
    
    .neon-title {
        font-size: 2.5rem;
    }
    
    .neon-subtitle {
        font-size: 1.2rem;
    }
    
    .cta-buttons {
        flex-direction: column;
        align-items: center;
        gap: 1rem;
    }
    
    .stats {
        flex-direction: column;
        gap: 1rem;
    }
}
</style>
</head>
<body>
    <div class="fire-particles"></div>
    <div class="gradient-bg"></div>
    
    <header class="glass-nav">
        <nav>
            <div class="logo">
                <span class="neon-text">STUDY</span>
                <span class="neon-text-alt">WARS</span>
            </div>
            <ul>
                <li><a href="#" class="neon-link">BATTLEGROUNDS</a></li>
                <li><a href="#" class="neon-link">ARMORY</a></li>
                <li><a href="#" class="neon-link">RANKINGS</a></li>
                <li><a href="#" class="neon-btn">ENLIST</a></li>
            </ul>
        </nav>
    </header>

    <main>
        <section class="hero glass-panel">
            <h1 class="neon-title">PREPARE FOR <span>KNOWLEDGE WARFARE</span></h1>
            <p class="neon-subtitle">Join the ultimate academic battleground where only the sharpest minds survive</p>
            <div class="cta-buttons">
                <a href="#" class="neon-btn-lg">ENTER THE ARENA</a>
                <a href="#" class="neon-btn-lg alt">WATCH BATTLE</a>
            </div>
        </section>

        <section class="stats glass-panel">
            <div class="stat-item">
                <div class="stat-value neon-text">12,459</div>
                <div class="stat-label">ACTIVE WARRIORS</div>
            </div>
            <div class="stat-item">
                <div class="stat-value neon-text-alt">3,287</div>
                <div class="stat-label">BATTLES TODAY</div>
            </div>
            <div class="stat-item">
                <div class="stat-value neon-text">892</div>
                <div class="stat-label">TOPICS MASTERED</div>
            </div>
        </section>
    </main>

    <script>

// Simple fire particle animation
document.addEventListener('DOMContentLoaded', function() {
    const container = document.querySelector('.fire-particles');
    
    // Create fire particles
    for (let i = 0; i < 50; i++) {
        createParticle();
    }
    
    function createParticle() {
        const particle = document.createElement('div');
        particle.classList.add('particle');
        
        // Random position
        const x = Math.random() * 100;
        const y = Math.random() * 100;
        
        // Random size
        const size = Math.random() * 10 + 5;
        
        // Random animation duration
        const duration = Math.random() * 15 + 10;
        
        // Random color (orange/red/yellow)
        const hue = Math.floor(Math.random() * 20) + 10; // 10-30 (red-orange)
        const color = `hsl(${hue}, 100%, 50%)`;
        
        particle.style.cssText = `
            position: absolute;
            width: ${size}px;
            height: ${size}px;
            background: ${color};
            border-radius: 50%;
            left: ${x}%;
            top: ${y}%;
            opacity: ${Math.random() * 0.5 + 0.3};
            filter: blur(${size/3}px);
            animation: float ${duration}s infinite ease-in-out;
            box-shadow: 0 0 ${size*2}px ${size}px ${color};
        `;
        
        // Random animation path
        const keyframes = `
            @keyframes float {
                0% {
                    transform: translate(0, 0);
                    opacity: ${Math.random() * 0.5 + 0.3};
                }
                50% {
                    transform: translate(${Math.random() * 100 - 50}px, ${Math.random() * -100 - 50}px);
                    opacity: ${Math.random() * 0.3};
                }
                100% {
                    transform: translate(${Math.random() * 100 - 50}px, ${Math.random() * -200 - 100}px);
                    opacity: 0;
                }
            }
        `;
        
        const style = document.createElement('style');
        style.innerHTML = keyframes;
        document.head.appendChild(style);
        
        container.appendChild(particle);
        
        // Remove particle after animation and create new one
        setTimeout(() => {
            particle.remove();
            createParticle();
        }, duration * 1000);
    }
});
</script>
</body>
</html>
